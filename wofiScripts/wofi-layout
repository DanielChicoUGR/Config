#!/bin/bash
# filepath: /home/daniel/.repos/Config/wofiScripts/monitor_layout.sh

# Obtener información de monitores conectados
get_monitors() {
    hyprctl monitors -j | jq -r '.[] | .name'
}

# Función para establecer un monitor como principal
set_main_monitor() {
    local selected_monitor="$1"
    local all_monitors=($(get_monitors))
    
    # Configurar monitor principal
    hyprctl keyword monitor ${selected_monitor},preferred,auto,1
    
    # Configurar los demás monitores a la derecha del principal
    local x_pos=0
    for monitor in "${all_monitors[@]}"; do
        if [[ "$monitor" != "$selected_monitor" ]]; then
            x_pos=$((x_pos+1920)) # Asumimos 1920px de ancho para los cálculos
            hyprctl keyword monitor ${monitor},preferred,${x_pos}x0,1
        fi
    done
    
    notify-send "Monitor" "Monitor principal cambiado a ${selected_monitor}"
}

# Función para configuración extendida (todos los monitores activos)
setup_extended() {
    local all_monitors=($(get_monitors))
    local x_pos=0
    
    for monitor in "${all_monitors[@]}"; do
        hyprctl keyword monitor ${monitor},preferred,${x_pos}x0,1
        x_pos=$((x_pos+1920)) # Asumimos 1920px de ancho para los cálculos
    done
    
    notify-send "Monitor" "Configuración expandida activada"
}

# Función para configuración en espejo
setup_mirror() {
    local all_monitors=($(get_monitors))
    local first_monitor="${all_monitors[0]}"
    
    # Configurar el primer monitor normalmente
    hyprctl keyword monitor ${first_monitor},preferred,0x0,1
    
    # Configurar los demás monitores como espejo del primero
    for monitor in "${all_monitors[@]:1}"; do
        hyprctl keyword monitor ${monitor},preferred,0x0,1,mirror,${first_monitor}
    done
    
    notify-send "Monitor" "Configuración en espejo activada"
}

# Función para usar solo un monitor específico
use_single_monitor() {
    local selected_monitor="$1"
    local all_monitors=($(get_monitors))
    
    # Desactivar todos los monitores
    for monitor in "${all_monitors[@]}"; do
        if [[ "$monitor" != "$selected_monitor" ]]; then
            hyprctl keyword monitor ${monitor},disabled
        fi
    done
    
    # Activar solo el monitor seleccionado
    hyprctl keyword monitor ${selected_monitor},preferred,0x0,1
    
    notify-send "Monitor" "Usando solo el monitor ${selected_monitor}"
}

# Menú principal
main_menu() {
    local all_monitors=($(get_monitors))
    local options=("Configuración Expandida" "Configuración en Espejo")
    
    # Añadir opción para cada monitor
    for monitor in "${all_monitors[@]}"; do
        options+=("Usar solo ${monitor}")
        options+=("Establecer ${monitor} como principal")
    done
    
    # Mostrar menú con wofi
    local choice=$(printf "%s\n" "${options[@]}" | wofi --dmenu --prompt="Configuración de Monitores")
    
    case "$choice" in
        "Configuración Expandida")
            setup_extended
            ;;
        "Configuración en Espejo")
            setup_mirror
            ;;
        "Usar solo "*)
            # Extraer nombre del monitor
            local monitor_name="${choice#Usar solo }"
            use_single_monitor "$monitor_name"
            ;;
        "Establecer "*)
            # Extraer nombre del monitor
            local monitor_name="${choice#Establecer }"
            monitor_name="${monitor_name% como principal}"
            set_main_monitor "$monitor_name"
            ;;
        *)
            exit 0
            ;;
    esac
}

# Verificar si hay múltiples monitores
monitor_count=$(get_monitors | wc -l)
if [ "$monitor_count" -lt 2 ]; then
    notify-send "Monitor" "Solo hay un monitor conectado"
    exit 0
fi

# Ejecutar el menú principal
main_menu